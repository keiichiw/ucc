#!/bin/bash

BIN_DIR=`dirname "$0"`
CC=$BIN_DIR/cc
AS=$BIN_DIR/as
UCCLIB=$BIN_DIR/../lib/libucc.s

UCCLIB_INCLUDE_DIR=$BIN_DIR/../include
OUTFILE=a.out
OFLAG=0

CPPOPTS="-undef -nostdinc -I$UCCLIB_INCLUDE_DIR -D__UCC__ -Dinline="
CLANGOPTS='-fsyntax-only -w -ansi -pedantic-errors -Werror=implicit -Werror=aggregate-return -Wno-overlength-strings'
ASMOPTS=''

usage_exit() {
    echo "Usage: $0 [-a ASMOPTS] [-s] [-o file] file" 1>&2
    exit 1
}

while getopts a:c:I:o:p:sSh OPT
do
    case $OPT in
        a)
            ASMOPTS=$OPTARG
            ;;
        c)
            CLANGOPTS="$CLANGOPTS $OPTARG"
            ;;
        I)
            CPPOPTS="$CPPOPTS -I$OPTARG"
            ;;
        o)
            OUTFILE=$OPTARG;
            OFLAG=1
            ;;
        p)
            CPPOPTS="$CPPOPTS $OPTARG"
            ;;
        s|S)
            ASM_MODE=1
            ;;
        h)
            usage_exit
            ;;
        \?)
            usage_exit
            ;;
    esac
done

shift $((OPTIND - 1))

FILE1=$1

if [ -z $FILE1 ]; then
    usage_exit
fi

if [ \( $# -gt 1 \) -a \( $OFLAG = 1 \) ]; then
    echo '-o option got but more than one files given'
    exit 1
fi

function compile() {
    local FILEDIR=`dirname $1`
    local FILENAME=`basename $1 .c`

    # preprocess
    clang -E $CPPOPTS $1 -o /tmp/$FILENAME.i || return 1

    # syntax check
    clang $CLANGOPTS /tmp/$FILENAME.i || return 1

    # compile
    $CC /tmp/$FILENAME.i || return 1

    # rename & push
    cp /tmp/$FILENAME.s $FILEDIR/
    ASMS="$ASMS $FILEDIR/$FILENAME.s"
}

for f in $@; do
    compile $f || exit 1;
done

if [ $ASM_MODE ]; then
    if [ $OFLAG = 1 ]; then
        cp /tmp/`basename $FILE1`.x.s $OUTFILE
    fi
    exit 0
fi

# assemble
$AS $ASMOPTS $ASMS -l $UCCLIB -o $OUTFILE -f __UCC_HEAP_START
