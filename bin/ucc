#!/bin/bash

BIN_DIR=`dirname "$0"`
CPP='cc -E'
CC=$BIN_DIR/cc
AS=$BIN_DIR/as
UCCLIB=$BIN_DIR/../lib/libucc.s

INCLUDE_DIR=.
UCCLIB_INCLUDE_DIR=$BIN_DIR/../include
OUTFILE=a.out
OFLAG=0
FILE1=$1

usage_exit() {
    echo "Usage: $0 [-s] [-o file] file" 1>&2
    exit 1
}

while getopts sSI:o:h OPT
do
    case $OPT in
        s|S)
            ASM_MODE=1
            ;;
        o)
            OUTFILE=$OPTARG;
            OFLAG=1
            ;;
        I)
            INCLUDE_DIR=$OPTARG
            ;;
        h)  usage_exit
            ;;
        \?) usage_exit
            ;;
    esac
done

shift $((OPTIND - 1))

if [ \( $# -gt 1 \) -a \( $OFLAG = 1 \) ]; then
    echo '-o option got but more than one files given'
    exit 1
fi

CPPOPTS="-undef -std=c89 -I$INCLUDE_DIR -I$UCCLIB_INCLUDE_DIR -D__UCC__=1"

ASMS=''

function compile() {
    local FILEDIR=`dirname $1`
    local FILENAME=`basename $1`

    # syntax check
    gcc -I$INCLUDE_DIR -w -fsyntax-only $1 || return 1

    # preprocess
    $CPP $CPPOPTS $1 > /tmp/$FILENAME.x || return 1

    # compile
    $CC /tmp/$FILENAME.x || return 1

    # rename & push
    cp /tmp/$FILENAME.x.s $FILEDIR/${FILENAME%.*}.s
    ASMS="$FILEDIR/${FILENAME%.*}.s $ASMS"
}

for f in $@; do
    compile $f || exit 1;
done

if [ $ASM_MODE ]; then
    if [ $OFLAG = 1 ]; then
        cp /tmp/`dirname $FILE1`.x.s $OUTFILE
    fi
    exit 0
fi

# assemble
$AS $ASMS -l $UCCLIB -o $OUTFILE -f __UCC_HEAP_START || exit 1
