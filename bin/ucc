#!/bin/bash

BIN_DIR=`dirname "$0"`
CC=$BIN_DIR/cc
AS=$BIN_DIR/as
UCCLIB=$BIN_DIR/../lib/libucc.s
UCCLIB_INCLUDE_DIR=$BIN_DIR/../include
OUTFILE=a.out

CPPOPTS="-undef -nostdinc -I$UCCLIB_INCLUDE_DIR -D__UCC__ -Dinline="
CLANGOPTS='-fsyntax-only -w -ansi -pedantic-errors -Werror=implicit -Werror=aggregate-return -Wno-overlength-strings -fno-builtin'
ASMOPTS=''

usage_exit() {
    echo "Usage: $0 [-a asm_option] [-s] [-o file] files" 1>&2
    exit 1
}

while getopts a:c:I:o:p:sSh OPT
do
    case $OPT in
        a)
            ASMOPTS=$OPTARG
            ;;
        c)
            CLANGOPTS="$CLANGOPTS $OPTARG"
            ;;
        I)
            CPPOPTS="$CPPOPTS -I$OPTARG"
            ;;
        o)
            OUTFILE=$OPTARG;
            OFLAG=1
            ;;
        p)
            CPPOPTS="$CPPOPTS $OPTARG"
            ;;
        s|S)
            ASM_MODE=1
            ;;
        h|\?)
            usage_exit
            ;;
    esac
done

shift $((OPTIND - 1))

if [ -z $1 ]; then
    usage_exit
fi

if [ $# -gt 1 ] && [ $OFLAG ] && [ $ASM_MODE ]; then
    echo 'ucc: error: cannot specify -o when generating multiple output files'
    exit 1
fi

function abort() {
    rm -f $ASMS
    exit 1
}

function compile() {
    local FILENAME=${1%.c}

    # preprocess
    clang -E $CPPOPTS $1 -o $FILENAME.tmp.i || abort

    # syntax check
    clang $CLANGOPTS $FILENAME.tmp.i || abort

    # compile
    $CC $FILENAME.tmp.i || abort

    # remove .i
    rm -f $FILENAME.tmp.i

    # rename & push
    if [ $ASM_MODE ]; then
        if [ $OFLAG ]; then
            mv -f $FILENAME.tmp.s $OUTFILE
        else
            mv -f $FILENAME.tmp.s ${FILENAME##*/}.s
        fi
    else
        ASMS="$ASMS $FILENAME.tmp.s"
    fi
}

for f in $@; do
    compile $f
done

if [ $ASM_MODE ]; then
    exit 0
fi

# assemble
$AS $ASMOPTS $ASMS -l $UCCLIB -o $OUTFILE -f __UCC_HEAP_START || abort
rm -f $ASMS
